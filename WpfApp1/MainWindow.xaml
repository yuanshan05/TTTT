<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="525"
        prism:ViewModelLocator.AutoWireViewModel="True">
    <Window.Resources>
        <Style TargetType="{x:Type ComboBoxItem}" x:Key="ComboxItemStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{Binding Name}"/>
                            <Label Content="{Binding Phone}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" StartPoint="0,0" MappingMode="Absolute">
            <GradientStop Color="#ABADB3" Offset="0.05"/>
            <GradientStop Color="#E2E3EA" Offset="0.07"/>
            <GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>

        <ControlTemplate x:Key="ValidationTempalte">

        </ControlTemplate>

        <Style TargetType="{x:Type TextBox}" x:Key="ValidationTextBox">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTempalte}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid x:Name="root">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="1"/>
                            </Grid.ColumnDefinitions>
                            <Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd"
                                                                    SnapsToDevicePixels="true"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                                                    RenderMouseOver="{TemplateBinding IsMouseOver}">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Microsoft_Windows_Themes:ListBoxChrome>
                            <Border x:Name="border"
                                    BorderBrush="#FFDB000C"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Stretch"
                                    Margin="0" Width="Auto">
                                <Grid Background="Transparent"
                                      HorizontalAlignment="Right"
                                      Height="12"
                                      Margin="1,-4,-4,0"
                                      VerticalAlignment="Top"
                                      Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                                </Grid>
                            </Border>
                            <Popup x:Name="popup" Placement="Right" IsOpen="False">
                                <Border x:Name="border1_Copy" Width="Auto" Height="Auto" Background="Red" BorderThickness="0" >
                                    <TextBlock TextWrapping="NoWrap"
                                               Text="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource TemplatedParent}}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" Foreground="White"/>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Validation.HasError" Value="True"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="IsOpen" TargetName="popup" Value="True"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <StackPanel>
        <StackPanel Orientation="Horizontal">
            <TextBox Width="100" Focusable="True" VerticalAlignment="Top" Margin="20" Height="25"/>
            <ComboBox Width="140" Height="25" 
                      IsEditable="True" 
                      Text="{Binding Key,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      VerticalAlignment="Top"
                      DisplayMemberPath="Phone" 
                      ItemsSource="{Binding Students}" 
                      ItemContainerStyle="{StaticResource ComboxItemStyle}"
                      HorizontalAlignment="Left" Margin="20">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTextInput">
                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="TextInput"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SelectionChanged">
                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="SelectedChanged"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextInput">  PreviewTextInput="ComboBox_TextInput"
                        <i:InvokeCommandAction Command="{Binding TetxChangedCommand}" CommandParameter="{Binding Path=Text,RelativeSource={RelativeSource Self}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
                <!--<ComboBox.Style>  FocusableChanged="ComboBox_FocusableChanged" TextInput="ComboBox_TextInput"
                    <Style TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="Focusable" Value="true">
                                <Setter Property="IsDropDownOpen" Value="True"/>
                            </Trigger>
                            <Trigger Property="Focusable" Value="false">
                                <Setter Property="IsDropDownOpen" Value="False"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>-->
            </ComboBox >
        </StackPanel>
        <StackPanel Orientation="Horizontal">
            <TextBox Text="{Binding Total}" Height="27" Width="120"/>

        </StackPanel>
        <StackPanel Orientation="Horizontal">
            <Button Width="70" Height="30" Margin="20 0" Content="超时" Command="{Binding QueryCommand}"/>
            <Button Width="70" Height="30" Content="异常" Command="{Binding ExceptionCommand}"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal" Margin="20 20 0 0">
            <Button Content="不定参数" Width="60" Height="30" Click="Button_Click"/>
            <Button Content="字符串参数" Width="60" Height="30" Margin="20 0 0 0" Click="Button_Click_1"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="20 10">
            <Button Width="70" Height="30" Content="零售商品" Click="QueryOparkGoods"></Button>
        </StackPanel>
        <StackPanel>
            <TextBox Width="200" Text="{Binding Price,Mode=TwoWay}" Height="30" VerticalContentAlignment="Center"/>
        </StackPanel>
        <StackPanel Margin="20">
            <StackPanel Orientation="Horizontal">
                <Label>姓名</Label>
                <TextBox Width="120" Style="{StaticResource ValidationTextBox}"
                         Text="{Binding ValiStudent.Name,Mode=TwoWay,ValidatesOnDataErrors=True,ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=LostFocus}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label>年龄</Label>
                <TextBox Text="{Binding ValiStudent.Age,Mode=TwoWay,ValidatesOnDataErrors=True,ValidatesOnExceptions=True,UpdateSourceTrigger=LostFocus}"
                         Width="120" Style="{StaticResource ValidationTextBox}"/>
            </StackPanel>
            <Button Width="80" Height="27" Command="{Binding FlurlConfigCommand}" Content="验证模型"/>
            <StackPanel Margin="20">
                <Grid>
                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                    <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                </Grid>
            </StackPanel>

            <StackPanel Margin="20" >
                <Button Content="导出" Height="27" Width="60" Command="{Binding ImportCommand}"/>
            </StackPanel>
            <StackPanel Margin="20">
                <Button Content="测试HTTPBASE" Height="27" VerticalContentAlignment="Center" HorizontalAlignment="Center" Click="Button_Click_2"/>
            </StackPanel>
        </StackPanel>
    </StackPanel>
</Window>
